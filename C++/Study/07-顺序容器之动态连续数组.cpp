#include <iostream>

/*
	顺序容器之动态连续数组
		1.容器库介绍
		2.迭代器失效
		3."vector"类模板的介绍与使用
*/

/**
	容器库介绍
		1.容器库是类模板与算法的汇集，允许程序员简单地访问常见数据结构，例如队列、链表和栈等。
			a.容器管理为其元素分配的存储空间，并提供成员函数来直接或通过迭代器(具有类似于指针的属性的对象)访问它们。
			b.许多容器有几个共同的成员函数，并且共享功能。
			c.决定使用哪种类型的容器来满足特定需求通常不仅仅取决于容器提供的功能，还取决于其某些成员的效率(复杂性)。
		2.不同标准下的容器类别
			a.C++11前，仅有两类容器，即顺序容器和关联容器。
				a'.顺序容器：实现能按顺序访问的数据结构。
					a''."array"类模板：静态的连续数组。(C++11)
					b''."vector"类模板：动态的连续数组。
					c''."deque"类模板：双端队列。
					d''."forward_list"类模板：单链表。(C++11)
					e''."list"类模板：双链表。
				b'.关联容器：实现能快速查找("O(logN)"复杂度)的数据结构。
					a''."set"类模板：唯一键的集合，按照键排序。
					b''."multiset"类模板：键值对的集合，按照键排序，键是唯一的。
					c''."map"类模板：键的集合，按照键排序。
					d''."multimap"类模板：键值对的集合，按照键排序。
			b.C++11起，新增了无序关联容器，它提供能快速查找(均摊复杂度为常数级别，最坏复杂度为线性级别)的无序(哈希)数据结构。
				a'."unordered_set"类模板：唯一键的集合，按照键生成散列。(C++11)
				b'."unordered_map"类模板：键值对的集合，按照键生成散列，键是唯一的。(C++11)
				c'."unordered_multiset"类模板：键的集合，按照键生成散列。(C++11)
				d'."unordered_multimap"类模板：键值对的集合，按照键生成散列。(C++11)
		3.容器适配器
			a.容器适配器不是完整的容器，是提供特定接口的类，并依赖于其中一个容器类(如双端队列或列表)的对象来处理元素。
			b.底层容器以这样一种方式封装，即容器适配器的成员独立于所使用的底层容器类来访问其元素。
			c.容器适配器中的三大类模板
				a'."stack"类模板：适配一个容器以提供栈，栈是一种后进先出的数据结构("LIFO")。
				b'."queue"类模板：适配一个容器以提供队列，队列是一种先进先出的数据结构("FIFO")。
				c'."priority_queue"类模板：适配一个容器以提供优先级队列。
*/